Component (인터페이스 또는 추상 클래스)
├── Leaf (단일 객체)
└── Composite (복합 객체: 자식 보관)


클라이언트 단순화          :	단일 객체와 복합 객체를 동일하게 처리
트리 구조 표현            :	계층 구조의 표현이 유리함 (파일 시스템, 조직도 등)
재귀적 호출 자연스러움      :	Composite 내부에서 자식들을 순회하며 동작


- **Composite 패턴은 "부분-전체" 관계를 다룰 때 적합**
- 인터페이스(또는 추상 클래스) 기반으로 Leaf와 Composite를 구현
- 트리 구조를 쉽게 순회하고 재귀 호출로 기능 확장 가능