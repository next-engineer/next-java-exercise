name: Build and Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker Image
        id: build-image
        run: |
          IMAGE_NAME=${{ secrets.IMAGE_NAME }}
          IMAGE_TAG=${{ secrets.IMAGE_TAG }}
          CONTAINER_NAME=${{ secrets.CONTAINER_NAME }}
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          IMAGE_URI=$ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG

          docker build -t $IMAGE_NAME .
          docker tag $IMAGE_NAME $IMAGE_URI
          docker push $IMAGE_URI

          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Generate ECS Task Definition file
        run: |
          mkdir -p build/deploy
          echo '{' > build/deploy/task-definition.json
          echo '  "family": "${{ secrets.TASK_FAMILY }}",' >> build/deploy/task-definition.json
          echo '  "networkMode": "awsvpc",' >> build/deploy/task-definition.json
          echo '  "requiresCompatibilities": ["FARGATE"],' >> build/deploy/task-definition.json
          echo '  "cpu": "256",' >> build/deploy/task-definition.json
          echo '  "memory": "512",' >> build/deploy/task-definition.json
          echo '  "executionRoleArn": "${{ secrets.EXECUTION_ROLE_ARN }}",' >> build/deploy/task-definition.json
          echo '  "containerDefinitions": [' >> build/deploy/task-definition.json
          echo '    {' >> build/deploy/task-definition.json
          echo '      "name": "${{ secrets.CONTAINER_NAME }}",' >> build/deploy/task-definition.json
          echo '      "image": "${{ env.IMAGE_URI }}",' >> build/deploy/task-definition.json
          echo '      "portMappings": [{' >> build/deploy/task-definition.json
          echo '        "containerPort": 8080,' >> build/deploy/task-definition.json
          echo '        "hostPort": 8080,' >> build/deploy/task-definition.json
          echo '        "protocol": "tcp"' >> build/deploy/task-definition.json
          echo '      }],' >> build/deploy/task-definition.json
          echo '      "essential": true,' >> build/deploy/task-definition.json
          echo '      "logConfiguration": {' >> build/deploy/task-definition.json
          echo '        "logDriver": "awslogs",' >> build/deploy/task-definition.json
          echo '        "options": {' >> build/deploy/task-definition.json
          echo '          "awslogs-group": "/ecs/${{ secrets.TASK_FAMILY }}",' >> build/deploy/task-definition.json
          echo '          "awslogs-region": "ap-northeast-2",' >> build/deploy/task-definition.json
          echo '          "awslogs-stream-prefix": "ecs"' >> build/deploy/task-definition.json
          echo '        }' >> build/deploy/task-definition.json
          echo '      }' >> build/deploy/task-definition.json
          echo '    }' >> build/deploy/task-definition.json
          echo '  ]' >> build/deploy/task-definition.json
          echo '}' >> build/deploy/task-definition.json

      - name: Upload task-definition.json
        uses: actions/upload-artifact@v4
        with:
          name: task-def
          path: build/deploy/task-definition.json

  deploy:
    name: Deploy to Amazon ECS
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Download task definition
        uses: actions/download-artifact@v4
        with:
          name: task-def
          path: build/deploy

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: ${{ secrets.ECS_CLUSTER }}
          service: ${{ secrets.ECS_SERVICE }}
          task-definition: build/deploy/task-definition.json
