package org.example.basic.parkjoohyung;

public class UnitOne {
    public static void main(String[] args) {
        // 1. 객체지향 프로그래밍
        // - 객체지향 프로그래밍은 객체를 중심으로 프로그램을 구성하는 방법론입니다.
        // - 객체는 데이터와 그 데이터를 처리하는 메소드를 포함합니다.
        // - 객체지향 프로그래밍의 주요 개념은 클래스, 객체, 상속, 다형성, 캡슐화입니다.

        // 2. 클래스와 객체
        // - 클래스는 객체를 생성하기 위한 설계도입니다.
        // - 객체는 클래스의 인스턴스로, 클래스에서 정의한 속성과 메소드를 가집니다.

        // 3. 상속
        // - 상속은 기존 클래스의 속성과 메소드를 새로운 클래스가 물려받는 것입니다.
        // - 이를 통해 코드의 재사용성을 높이고, 계층 구조를 형성할 수 있습니다.

        // 4. 다형성
        // - 다형성은 같은 이름의 메소드가 다른 동작을 수행할 수 있는 능력입니다.
        // - 이는 오버로딩과 오버라이딩을 통해 구현됩니다.

        // 5. 캡슐화
        // - 캡슐화는 객체의 속성과 메소드를 하나로 묶고, 외부에서 접근을 제한하는 것입니다.
        // - 이를 통해 데이터 보호와 코드 유지보수를 용이하게 합니다.
    }
}
